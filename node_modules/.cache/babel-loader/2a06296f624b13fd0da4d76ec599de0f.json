{"ast":null,"code":"var _jsxFileName = \"/home/wekancode/magicurl-frontend/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { useForm } from 'react-hook-form';\nimport React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport minion from './Images/octopus.png';\nimport './Styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = async data => {\n    const value = {\n      \"username\": data.username,\n      \"email\": data.email,\n      \"password\": data.password\n    };\n    console.log(value);\n    const res = await axios.post(`http://13.233.129.83:3000/users/signup`, value).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"min-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: minion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          variant: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Get Started with your account!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              align: \"left\",\n              children: \"Already have a account?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"input\",\n              name: \"email\",\n              children: \"Email id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              className: \"textbox\",\n              required: true,\n              ref: register({\n                required: 'Email is required'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"input\",\n              name: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              className: \"textbox\",\n              required: true,\n              ref: register({\n                required: 'Username is required'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"input\",\n              name: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              className: \"textbox\",\n              required: true,\n              ref: register({\n                required: 'Password is required'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"btn\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 77\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Signup, \"JbtQvHbBPz53/H7syAtcl5GatlA=\", false, function () {\n  return [useForm];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/wekancode/magicurl-frontend/src/components/Signup.js"],"names":["useForm","React","Card","Button","Link","axios","minion","Signup","register","handleSubmit","errors","onSubmit","data","value","username","email","password","console","log","res","post","then","catch","err","required"],"mappings":"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","sourcesContent":["import {useForm} from 'react-hook-form'\nimport React from 'react'\nimport {Card,Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport minion from './Images/octopus.png'\nimport './Styles/App.css'\nconst Signup = () => {\n  const {register,handleSubmit,errors} = useForm();\n  const onSubmit =  async(data) =>{\n    const value ={\n    \"username\":data.username,\n    \"email\": data.email,\n    \"password\": data.password\n    } \n    console.log(value);\n    const res = await axios.post(`http://13.233.129.83:3000/users/signup`,value)\n    .then(res => {\n      console.log(res);\n      \n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  return (\n   <div className=\"signup\">\n <form onSubmit={handleSubmit(onSubmit)}>\n    <Card className=\"min-card\">\n  <Card.Img variant=\"top\" src={minion} />\n  <Card.Body variant=\"center\">\n    <Card.Title>Get Started with your account!</Card.Title>\n   <Link to=\"/\"><h6 align=\"left\">Already have a account?</h6></Link><br/>\n    <Card.Text>\n    <label htmlFor=\"input\" name=\"email\">Email id</label>\n      <input type=\"text\" name=\"email\" className=\"textbox\" required ref={register({required:'Email is required'})}/>\n      <label htmlFor=\"input\" name=\"username\">Username</label>\n      <input type=\"text\" name=\"username\" className=\"textbox\" required ref={register({required:'Username is required'})}/>\n      <label htmlFor=\"input\" name=\"password\">Password</label>\n      <input type=\"password\" name=\"password\" className=\"textbox\" required ref={register({required:'Password is required'})}/>\n    </Card.Text>\n    <Button variant=\"primary\" className=\"btn\" type=\"submit\">Sign Up</Button><br/><br/>\n  \n  </Card.Body>\n</Card>\n     </form>\n   </div>\n  )\n}\n\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}