{"ast":null,"code":"var _jsxFileName = \"/home/wekancode/magicurl-frontend/src/components/Forgotpassword.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Styles/App.css';\nimport { Card, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport minion from './Images/forgotpassword.jpg';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Forgotpassword = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  let result;\n  const [response, setresponse] = React.useState();\n\n  const onSubmit = async data => {\n    const res = await axios.post(`http://13.233.129.83:3000/auth/forgot_password`, {\n      \"email\": data.emailid\n    }).then(res => {\n      console.log(res);\n      result = res.data.message;\n      setresponse(result);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetpassword\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"min-card\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: minion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 5\n          }, this), response === \"User with the given email doesn't exist\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Please enter a valid email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 62\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green',\n              fontWeight: 'bold'\n            },\n            children: \"Check your mail to reset password!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 128\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              align: \"left\",\n              children: \" Enter your email address below and we'll send you an email with instructions!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"input\",\n              name: \"emailid\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 63\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"textbox\",\n              name: \"emailid\",\n              required: true,\n              ref: register({\n                required: 'Email is required',\n                pattern: {\n                  value: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/,\n                  message: 'Invalid email'\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            className: \"btn\",\n            type: \"submit\",\n            children: \"Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Forgotpassword, \"k5HYijJjiMNsLCfpcp3shFglvTI=\", false, function () {\n  return [useForm];\n});\n\n_c = Forgotpassword;\nexport default Forgotpassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forgotpassword\");","map":{"version":3,"sources":["/home/wekancode/magicurl-frontend/src/components/Forgotpassword.js"],"names":["React","Card","Button","Link","axios","minion","useForm","Forgotpassword","register","handleSubmit","result","response","setresponse","useState","onSubmit","data","res","post","emailid","then","console","log","message","catch","err","color","fontWeight","required","pattern","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Styles/App.css'\nimport {Card,Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport minion from './Images/forgotpassword.jpg'\nimport {useForm} from 'react-hook-form';\nconst Forgotpassword = () => {\n  const {register,handleSubmit} = useForm();\n  let result;\n  const [response,setresponse] = React.useState();\n  const onSubmit = async(data) => {\n   const res = await axios.post(`http://13.233.129.83:3000/auth/forgot_password`,{\n     \"email\":data.emailid\n   })\n   .then(res => {\n     console.log(res)\n     result = res.data.message\n     setresponse(result)\n   })\n   .catch(err => {\n     console.log(err);\n   })\n  }\n  return (\n    <div className=\"resetpassword\">\n      <form onSubmit={handleSubmit(onSubmit)}>\n    <Card className=\"min-card\">\n  <Card.Img variant=\"top\" src={minion} />\n  <Card.Body>\n    <Card.Title>Reset Password</Card.Title>\n    {response=== \"User with the given email doesn't exist\" ? <p style={{color:'red'}}>Please enter a valid email address</p> : <p style={{color:'green',fontWeight:'bold'}}>Check your mail to reset password!!</p>   }\n    <Card.Text>\n   <h6 align=\"left\"> Enter your email address below and we'll send you an email with instructions!!</h6>\n   <label htmlFor=\"input\" name=\"emailid\">Email address</label><br/>\n   <input type=\"text\" className=\"textbox\" name=\"emailid\" required ref={register({required:'Email is required',pattern:{value:/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/,message:'Invalid email'}})}></input>\n    </Card.Text>\n    <Button variant=\"primary\" className=\"btn\" type=\"submit\">Reset Password</Button>\n  </Card.Body>\n</Card>\n</form>\n    </div>\n  )\n}\n\nexport default Forgotpassword\n"]},"metadata":{},"sourceType":"module"}